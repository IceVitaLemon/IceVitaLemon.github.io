<?xml version="1.0" encoding="UTF-8"?>
<urlset xmlns="http://www.sitemaps.org/schemas/sitemap/0.9">
  
  <url>
    <loc>http://example.com/2022/12/05/MySQL%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/</loc>
    
    <lastmod>2022-12-05T07:24:03.141Z</lastmod>
    
    <date>1670225043000</date>
    <title>MySQL知识总结 | IceVitalemon's Blog</title>
    
    <desc></desc>
  </url>
  
  <url>
    <loc>http://example.com/2022/12/05/Kafka%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93/</loc>
    
    <lastmod>2022-12-05T07:23:09.629Z</lastmod>
    
    <date>1670224989000</date>
    <title>Kafka知识总结 | IceVitalemon's Blog</title>
    
    <desc></desc>
  </url>
  
  <url>
    <loc>http://example.com/2022/11/01/%E8%AE%B0%E4%B8%80%E6%AC%A1WSDL%E4%BD%BF%E7%94%A8/</loc>
    
    <lastmod>2022-12-05T07:20:31.996Z</lastmod>
    
    <date>1667296764000</date>
    <title>记一次WSDL使用 | IceVitalemon's Blog</title>
    
    <desc>1. 起因突然要求对接公司集团的一个接口，给了一个 http://192.168.1.1:7001/services/NotifyService?wsdl 这种地址过来，然后还给了个说明文档，介绍用 XML 的格式发送报文。 一开始觉得跟 restful 接口差不多，就没多大留意。然后按照说明文档构建了 XML 格式的报文，跟下面的例子差不多。觉得没啥问题了，用 Postman 一测试，哎，怎么返</desc>
  </url>
  
  <url>
    <loc>http://example.com/2022/10/10/Linux%E4%B8%AD%E7%9A%84login-shell%E5%92%8Cnon-login-shell/</loc>
    
    <lastmod>2022-12-05T07:19:13.459Z</lastmod>
    
    <date>1665385093000</date>
    <title>Linux中的login shell和non-login shell | IceVitalemon's Blog</title>
    
    <desc>1. 简要介绍Shell是用于为用户提供与Linux内核交互的工具，比如sh、bash、zch等都是shell。当我们使用Linux的时候，一进入系统就有一堆的变量可以使用，那么这些变量从哪里来呢？在Linux启动的时候，会按一定的顺序读取配置文件，并且将这些配置文件中的环境变量设置到当前的shell中，所以我们才能使用这些环境变量中目录里面的命令。 因此我们就需要了解两个问题：</desc>
  </url>
  
  <url>
    <loc>http://example.com/2022/11/02/%E5%85%B3%E4%BA%8E%E4%B8%80%E4%BA%9B%E5%A5%BD%E7%9C%8B%E7%9A%84%E5%86%99%E4%BD%9C%E8%A7%84%E8%8C%83/</loc>
    
    <lastmod>2022-12-05T07:18:55.463Z</lastmod>
    
    <date>1667373212000</date>
    <title>关于一些好看的写作规范 | IceVitalemon's Blog</title>
    
    <desc>1. 前言主要是统一一下自己的写作规范，尽可能好看一点</desc>
  </url>
  
  <url>
    <loc>http://example.com/2022/08/18/LVS%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1%E5%AE%9E%E6%88%98/</loc>
    
    <lastmod>2022-12-05T07:18:44.014Z</lastmod>
    
    <date>1660807965000</date>
    <title>LVS负载均衡实战 | IceVitalemon's Blog</title>
    
    <desc>1. 前言LVS的作用就是用作四层的负载均衡，四层是指TCP/IP七层协议中的传输层。目的是请求按一定的调度策略把用户的请求分发到多台后端设备上。区别于nginx，nginx是七层的负载均衡，能够看到http协议，而LVS只能看到四层的协议，即TCP协议等，所以无法通过Http cookie处理session。 2. 简介</desc>
  </url>
  
  <url>
    <loc>http://example.com/2022/08/17/python%E5%8C%85%E5%AE%89%E8%A3%85%E4%B8%8E%E5%8D%B8%E8%BD%BD/</loc>
    
    <lastmod>2022-12-05T07:18:15.467Z</lastmod>
    
    <date>1660735232000</date>
    <title>python包安装与卸载 | IceVitalemon's Blog</title>
    
    <desc>1. python包安装方式 setup.py方式 pip方式（推荐） easy_install方式 python常用的包管理器是pip和easy_install，他们会从PyPI源里面搜索模块并自动下载安装，通常pip在安装python时会一并安装，而easy_install会在安装setuptools之后安装好</desc>
  </url>
  
  <url>
    <loc>http://example.com/2022/08/17/python%E6%A8%A1%E5%9D%97%E5%8A%A0%E8%BD%BD%E9%A1%BA%E5%BA%8F/</loc>
    
    <lastmod>2022-12-05T07:18:09.817Z</lastmod>
    
    <date>1660736171000</date>
    <title>python模块加载顺序 | IceVitalemon's Blog</title>
    
    <desc>结论：工程自定义包 -&gt; 工程py文件 -&gt; 系统路径 所以如果在工程中自己创建了跟系统&#x2F;第三方模块重名的模块时，则无法加载系统&#x2F;第三方模块 python出于性能考虑，每个模块在每个解释器会话中只导入一遍，所以如果程序运行过程中，你修改了自定义模块，那么需要重启解释器（即重启程序）或者使用reload(moduleName)重新加载模块（不用重启） 1. 查看模块加</desc>
  </url>
  
  <url>
    <loc>http://example.com/2022/09/14/Spring-validation%E4%BD%BF%E7%94%A8%E5%8F%8A%E6%A0%A1%E9%AA%8C%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86/</loc>
    
    <lastmod>2022-12-05T07:17:52.183Z</lastmod>
    
    <date>1663149431000</date>
    <title>Spring validation使用及校验异常处理 | IceVitalemon's Blog</title>
    
    <desc>1. 作用 Spring validation能够用来校验前端传到后端的参数，并且当参数不符合规则时抛出异常信息 Java API规范(JSR303)定义了Bean校验的标准validation-api，但没有提供实现。hibernate validation是对这个规范的实现，并增加了校验注解如@Email、@Length等。Spring Validation是对hibernate valida</desc>
  </url>
  
  <url>
    <loc>http://example.com/2022/08/30/MySQL%E5%82%A8%E5%AD%98%E8%BF%87%E7%A8%8B%E6%B8%B8%E6%A0%87%E4%BD%BF%E7%94%A8%E8%B8%A9%E5%9D%91%EF%BC%88NOT-FOUND%EF%BC%89/</loc>
    
    <lastmod>2022-12-05T07:17:28.146Z</lastmod>
    
    <date>1661845435000</date>
    <title>MySQL储存过程游标使用踩坑（NOT FOUND） | IceVitalemon's Blog</title>
    
    <desc>1. 具体问题在使用游标的过程中，通常都会使用未找到（NOT FOUND或者SQLSTATE ‘02000’）的条件来标识游标的结束。 即定义一个变量finished初始化为FALSE，并且定义一个事件处理程序处理NOT FOUND异常（FETCH时，游标已经达到末尾）将变量finished设置为TRUE，并通过检查变量finished来结束循环。</desc>
  </url>
  
  <url>
    <loc>http://example.com/2022/12/05/Java%E4%B8%AD%E7%9A%84BIO%E3%80%81NIO%E3%80%81AIO/</loc>
    
    <lastmod>2022-12-05T07:15:41.369Z</lastmod>
    
    <date>1670222790000</date>
    <title>Java中的BIO、NIO、AIO | IceVitalemon's Blog</title>
    
    <desc>1. I&#x2F;O Input&#x2F;Output的缩写，简单的理解为数据的输入输出，通常有网络IO、磁盘IO。而IO的类型又分为同步&#x2F;异步IO、阻塞&#x2F;非阻塞I&#x2F;O，组合成具体的IO模型。IO属于操作系统层面上的知识，Java只是在操作系统提供的系统调用上封装了操作接口。 所有的系统IO都分为两个阶段：等待就绪和操作。以网络IO举例来说，读函数，分为等待网卡可</desc>
  </url>
  
  <url>
    <loc>http://example.com/2022/09/05/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E5%9B%9E%E9%A1%BE/</loc>
    
    <lastmod>2022-12-05T03:13:43.834Z</lastmod>
    
    <date>1662343640000</date>
    <title>基础知识回顾 | IceVitalemon's Blog</title>
    
    <desc>JAVA基础知识集合（未施工）HashMap</desc>
  </url>
  
  <url>
    <loc>http://example.com/categories/index.html</loc>
    
    <lastmod>2022-12-01T03:37:13.603Z</lastmod>
    
    <date>1669865652000</date>
    <title>分类 | IceVitalemon's Blog</title>
    
    <desc></desc>
  </url>
  
  <url>
    <loc>http://example.com/tags/index.html</loc>
    
    <lastmod>2022-12-01T03:37:01.893Z</lastmod>
    
    <date>1669865658000</date>
    <title>标签 | IceVitalemon's Blog</title>
    
    <desc></desc>
  </url>
  
  <url>
    <loc>http://example.com/2022/08/17/Hexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/</loc>
    
    <lastmod>2022-10-24T08:44:07.858Z</lastmod>
    
    <date>1660737096000</date>
    <title>Hexo个人博客搭建 | IceVitalemon's Blog</title>
    
    <desc></desc>
  </url>
  
</urlset>